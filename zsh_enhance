# zsh 的增强

# prompt abbr
prompt_dir() {
  prompt_segment blue $CURRENT_FG '%2~'
}

#function zshaddhistory() {
	#return 1
#}

# 退出nvim后光标变成block
bindkey -v
# Remove delay when entering normal mode (vi)
KEYTIMEOUT=5
# Change cursor shape for different vi modes.
function zle-keymap-select {
  if [[ $KEYMAP == vicmd ]] || [[ $1 = 'block' ]]; then
    echo -ne '\e[1 q'
  elif [[ $KEYMAP == main ]] || [[ $KEYMAP == viins ]] || [[ $KEYMAP = '' ]] || [[ $1 = 'beam' ]]; then
    echo -ne '\e[5 q'
  fi
}
zle -N zle-keymap-select
# Start with beam shape cursor on zsh startup and after every command.
zle-line-init() { zle-keymap-select 'beam'}



# vi-mode home end 失效
bindkey "^[[H" beginning-of-line
bindkey "^[[F" end-of-line



# isAlias() {
	#local FIRSTWORD EXPAND REALCMD
	#FIRSTWORD="$1"
	#EXPAND="$(whence -w $FIRSTWORD 2>/dev/null)"
	#if [[ "${EXPAND}" == "${FIRSTWORD}: alias" ]]; then
		#REALCMD="$(whence $FIRSTWORD)"
		#if ! [[ "$REALCMD" =~ "^${FIRSTWORD} .*" ]]; then
			#return 0
		#fi
	#fi
	#return 1
#}

# 回显上条命令的alias实际command
#_-accept-line () {
	#emulate -L zsh
	#local -a WORDS FORMER
	#WORDS=( ${(z)BUFFER} )
	#FORMER=${WORDS}
	#local -r FIRSTWORD=${WORDS[1]}
	#if isAlias ${FIRSTWORD}; then
		#WORDS[1]="$(whence ${FIRSTWORD})"
		#BUFFER=${WORDS}
	#fi

	#print -s ${FORMER}
	#zle .accept-line
	#BUFFER="123"
	 #直接删除最后一行重复history
	#gsed -i '$d' ~/.zsh_history
#}
#zle -N accept-line _-accept-line
